import os

import numpy
from Cython.Build import cythonize
from setuptools import Extension, setup

if os.name == "posix":
    extra_compile_args = [
        "-std=c++17",
        "-O3",
    ]
    define_macros = [
        ("NDEBUG",),
    ]
elif os.name == "nt":
    extra_compile_args = ["/GL", "/std:c++17"]
    define_macros = []

extra_compile_args.extend([
{%- for compiler_flag in compiler_flags %}
    "{{ compiler_flag }}",
{%- endfor %}
])

extensions = [
    Extension(
        "{{ module }}",
        [
            "{{ module }}.pyx",
{%- for filename in filenames %}
            "{{ filename }}",
{%- endfor %}
        ],
        include_dirs=[
            "{{ sourcedir }}",
            numpy.get_include(),
{%- for incdir in incdirs %}
            "{{ incdir }}",
{%- endfor %}
        ],
        define_macros=define_macros,
        extra_compile_args=extra_compile_args,
        library_dirs=[
        {%- for library_dir in library_dirs %}
            "{{ library_dir }}",
        {%- endfor %}
        ],
        libraries=[
        {%- for library in libraries %}
            "{{ library }}",
        {%- endfor %}
        ],
        language="c++"
    )
]
setup(
    name="{{ module }}",
    ext_modules=cythonize(extensions,
                          language_level=3,
                          compiler_directives={
                              'c_string_type': 'str',
                              'c_string_encoding': 'default'
                          })
)
